{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-lms-frontend (2)\\\\my-lms-frontend\\\\src\\\\assessment\\\\components\\\\AssessmentQuestion.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Timer from './Timer';\nimport { ASSESSMENT_TYPES, TIMER_TYPES } from '../utils/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentQuestion = ({\n  question,\n  onAnswer,\n  currentAnswer,\n  timerType,\n  onTimeUp\n}) => {\n  const renderLikertScale = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors duration-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: `question-${question.id}`,\n        value: index,\n        checked: currentAnswer === index,\n        onChange: () => onAnswer(question.id, index),\n        className: \"h-4 w-4 text-blue-600 focus:ring-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-3 text-gray-900\",\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  const renderPointBased = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors duration-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: `question-${question.id}`,\n        value: index,\n        checked: currentAnswer === index,\n        onChange: () => onAnswer(question.id, index),\n        className: \"h-4 w-4 text-blue-600 focus:ring-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-3 text-gray-900\",\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), question.points && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-auto text-sm text-gray-500\",\n        children: [question.points, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow rounded-lg p-6\",\n    children: [timerType === TIMER_TYPES.PER_QUESTION && question.timeLimit > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Timer, {\n        initialTime: question.timeLimit,\n        onTimeUp: onTimeUp,\n        isActive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-medium text-gray-900 mb-4\",\n      children: question.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), question.type === ASSESSMENT_TYPES.LIKERT ? renderLikertScale() : renderPointBased()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = AssessmentQuestion;\nAssessmentQuestion.propTypes = {\n  question: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    points: PropTypes.number,\n    timeLimit: PropTypes.number,\n    correctAnswer: PropTypes.number\n  }).isRequired,\n  onAnswer: PropTypes.func.isRequired,\n  currentAnswer: PropTypes.number,\n  timerType: PropTypes.string,\n  onTimeUp: PropTypes.func\n};\nexport default AssessmentQuestion;\nvar _c;\n$RefreshReg$(_c, \"AssessmentQuestion\");","map":{"version":3,"names":["React","PropTypes","Timer","ASSESSMENT_TYPES","TIMER_TYPES","jsxDEV","_jsxDEV","AssessmentQuestion","question","onAnswer","currentAnswer","timerType","onTimeUp","renderLikertScale","className","children","options","map","option","index","type","name","id","value","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","renderPointBased","points","PER_QUESTION","timeLimit","initialTime","isActive","text","LIKERT","_c","propTypes","shape","string","isRequired","arrayOf","number","correctAnswer","func","$RefreshReg$"],"sources":["E:/my-lms-frontend (2)/my-lms-frontend/src/assessment/components/AssessmentQuestion.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Timer from './Timer';\r\nimport { ASSESSMENT_TYPES, TIMER_TYPES } from '../utils/types';\r\n\r\nconst AssessmentQuestion = ({\r\n  question,\r\n  onAnswer,\r\n  currentAnswer,\r\n  timerType,\r\n  onTimeUp\r\n}) => {\r\n  const renderLikertScale = () => (\r\n    <div className=\"space-y-4\">\r\n      {question.options.map((option, index) => (\r\n        <label\r\n          key={index}\r\n          className=\"flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors duration-200\"\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            name={`question-${question.id}`}\r\n            value={index}\r\n            checked={currentAnswer === index}\r\n            onChange={() => onAnswer(question.id, index)}\r\n            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500\"\r\n          />\r\n          <span className=\"ml-3 text-gray-900\">{option}</span>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const renderPointBased = () => (\r\n    <div className=\"space-y-4\">\r\n      {question.options.map((option, index) => (\r\n        <label\r\n          key={index}\r\n          className=\"flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors duration-200\"\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            name={`question-${question.id}`}\r\n            value={index}\r\n            checked={currentAnswer === index}\r\n            onChange={() => onAnswer(question.id, index)}\r\n            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500\"\r\n          />\r\n          <span className=\"ml-3 text-gray-900\">{option}</span>\r\n          {question.points && (\r\n            <span className=\"ml-auto text-sm text-gray-500\">\r\n              {question.points} points\r\n            </span>\r\n          )}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-white shadow rounded-lg p-6\">\r\n      {timerType === TIMER_TYPES.PER_QUESTION && question.timeLimit > 0 && (\r\n        <div className=\"mb-4\">\r\n          <Timer\r\n            initialTime={question.timeLimit}\r\n            onTimeUp={onTimeUp}\r\n            isActive={true}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n        {question.text}\r\n      </h3>\r\n      \r\n      {question.type === ASSESSMENT_TYPES.LIKERT\r\n        ? renderLikertScale()\r\n        : renderPointBased()}\r\n    </div>\r\n  );\r\n};\r\n\r\nAssessmentQuestion.propTypes = {\r\n  question: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    points: PropTypes.number,\r\n    timeLimit: PropTypes.number,\r\n    correctAnswer: PropTypes.number\r\n  }).isRequired,\r\n  onAnswer: PropTypes.func.isRequired,\r\n  currentAnswer: PropTypes.number,\r\n  timerType: PropTypes.string,\r\n  onTimeUp: PropTypes.func\r\n};\r\n\r\nexport default AssessmentQuestion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}