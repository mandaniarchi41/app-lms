{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,allowedRoles=[]}=_ref;const{user,isAuthenticated}=useAuth();if(!isAuthenticated){// Redirect to login if not authenticated\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(allowedRoles.length>0&&!allowedRoles.includes(user.role)){// Redirect to appropriate dashboard based on role\nif(user.role==='admin'){return/*#__PURE__*/_jsx(Navigate,{to:\"/admin\",replace:true});}else if(user.role==='student'){return/*#__PURE__*/_jsx(Navigate,{to:\"/student/dashboard\",replace:true});}// If role is not recognized, redirect to home\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","allowedRoles","user","isAuthenticated","to","replace","length","includes","role"],"sources":["E:/lms-assesment-frontend/my-lms-frontend (2)/my-lms-frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\r\n  const { user, isAuthenticated } = useAuth();\r\n\r\n  if (!isAuthenticated) {\r\n    // Redirect to login if not authenticated\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (allowedRoles.length > 0 && !allowedRoles.includes(user.role)) {\r\n    // Redirect to appropriate dashboard based on role\r\n    if (user.role === 'admin') {\r\n      return <Navigate to=\"/admin\" replace />;\r\n    } else if (user.role === 'student') {\r\n      return <Navigate to=\"/student/dashboard\" replace />;\r\n    }\r\n    // If role is not recognized, redirect to home\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAqC,IAApC,CAAEC,QAAQ,CAAEC,YAAY,CAAG,EAAG,CAAC,CAAAF,IAAA,CACrD,KAAM,CAAEG,IAAI,CAAEC,eAAgB,CAAC,CAAGR,OAAO,CAAC,CAAC,CAE3C,GAAI,CAACQ,eAAe,CAAE,CACpB;AACA,mBAAON,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIJ,YAAY,CAACK,MAAM,CAAG,CAAC,EAAI,CAACL,YAAY,CAACM,QAAQ,CAACL,IAAI,CAACM,IAAI,CAAC,CAAE,CAChE;AACA,GAAIN,IAAI,CAACM,IAAI,GAAK,OAAO,CAAE,CACzB,mBAAOX,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAAC,IAAM,IAAIH,IAAI,CAACM,IAAI,GAAK,SAAS,CAAE,CAClC,mBAAOX,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,oBAAoB,CAACC,OAAO,MAAE,CAAC,CACrD,CACA;AACA,mBAAOR,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}