{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-lms-frontend (2)\\\\my-lms-frontend\\\\src\\\\assessment\\\\pages\\\\SelfAssessmentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport AssessmentDashboard from '../components/AssessmentDashboard';\nimport AssessmentQuestion from '../components/AssessmentQuestion';\nimport AssessmentResult from '../components/AssessmentResult';\nimport Timer from '../components/Timer';\nimport { ASSESSMENT_TYPES, TIMER_TYPES } from '../utils/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelfAssessmentPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [currentView, setCurrentView] = useState('dashboard'); // 'dashboard', 'assessment', 'result'\n  const [currentAssessment, setCurrentAssessment] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [assessmentHistory, setAssessmentHistory] = useState([]);\n  const [score, setScore] = useState(null);\n  const [availableAssessments, setAvailableAssessments] = useState([]);\n\n  // Mock data for demonstration\n  useEffect(() => {\n    // In a real app, this would fetch from your API\n    setAssessmentHistory([{\n      id: '1',\n      title: 'JavaScript Fundamentals',\n      score: 85,\n      completedAt: '2024-03-15T10:30:00Z'\n    }, {\n      id: '2',\n      title: 'React Basics',\n      score: 92,\n      completedAt: '2024-03-14T15:45:00Z'\n    }]);\n\n    // Also fetch available assessments\n    setAvailableAssessments([createAssessment({\n      id: '1',\n      title: 'JavaScript Fundamentals',\n      description: 'Test your knowledge of JavaScript basics',\n      type: ASSESSMENT_TYPES.POINT_BASED,\n      timerType: TIMER_TYPES.FULL_TEST,\n      totalTime: 30,\n      // 30 minutes\n      passingScore: 70,\n      questions: [createQuestion({\n        id: 'q1',\n        text: 'What is the correct way to declare a variable in JavaScript?',\n        type: ASSESSMENT_TYPES.POINT_BASED,\n        options: ['var x = 5;', 'const x = 5;', 'variable x = 5;', 'x = 5;'],\n        points: 10,\n        correctAnswer: 1 // index of 'const x = 5;'\n      }), createQuestion({\n        id: 'q2',\n        text: 'Which of the following is NOT a JavaScript data type?',\n        type: ASSESSMENT_TYPES.POINT_BASED,\n        options: ['String', 'Boolean', 'Character', 'Number'],\n        points: 10,\n        correctAnswer: 2 // index of 'Character'\n      }), createQuestion({\n        id: 'q3',\n        text: 'What does HTML stand for?',\n        type: ASSESSMENT_TYPES.POINT_BASED,\n        options: ['Hyper Text Markup Language', 'High-level Text Management Language', 'Hyperlink and Text Markup Language', 'Home Tool Markup Language'],\n        points: 10,\n        correctAnswer: 0 // index of 'Hyper Text Markup Language'\n      })]\n    }), createAssessment({\n      id: '2',\n      title: 'React Basics',\n      description: 'Test your understanding of React fundamentals',\n      type: ASSESSMENT_TYPES.POINT_BASED,\n      timerType: TIMER_TYPES.PER_QUESTION,\n      totalTime: 60,\n      // 60 seconds per question\n      passingScore: 70,\n      questions: [createQuestion({\n        id: 'rq1',\n        text: 'What is the primary function of React?',\n        type: ASSESSMENT_TYPES.POINT_BASED,\n        options: ['To manage databases', 'To build user interfaces', 'To handle server-side logic', 'To style web pages'],\n        points: 10,\n        correctAnswer: 1 // index of 'To build user interfaces'\n      }), createQuestion({\n        id: 'rq2',\n        text: 'Which of the following is used to pass data to a Component from outside?',\n        type: ASSESSMENT_TYPES.POINT_BASED,\n        options: ['setState', 'render with arguments', 'props', 'PropTypes'],\n        points: 10,\n        correctAnswer: 2 // index of 'props'\n      })]\n    })]);\n  }, []);\n  const handleStartAssessment = assessment => {\n    setCurrentAssessment(assessment);\n    setCurrentQuestionIndex(0);\n    setAnswers({});\n    setCurrentView('assessment');\n  };\n  const handleAnswer = (questionId, answerIndex) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }));\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < currentAssessment.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      handleSubmitAssessment();\n    }\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n  const handleSubmitAssessment = () => {\n    // Calculate score\n    const totalQuestions = currentAssessment.questions.length;\n    const correctAnswers = Object.entries(answers).filter(([questionId, answerIndex]) => {\n      const question = currentAssessment.questions.find(q => q.id === questionId);\n      return question.correctAnswer === answerIndex;\n    }).length;\n    const calculatedScore = Math.round(correctAnswers / totalQuestions * 100);\n    setScore(calculatedScore);\n\n    // Add to history\n    const newHistory = {\n      id: currentAssessment.id,\n      title: currentAssessment.title,\n      score: calculatedScore,\n      completedAt: new Date().toISOString()\n    };\n    setAssessmentHistory(prev => [newHistory, ...prev]);\n    setCurrentView('result');\n  };\n  const handleTimeUp = () => {\n    if (currentAssessment.timerType === TIMER_TYPES.PER_QUESTION) {\n      handleNextQuestion();\n    } else {\n      handleSubmitAssessment();\n    }\n  };\n  const renderContent = () => {\n    switch (currentView) {\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: \"Self-Assessments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), (user === null || user === void 0 ? void 0 : user.role) === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('admin'),\n              className: \"btn-primary\",\n              children: \"Manage Assessments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AssessmentDashboard, {\n            assessmentHistory: assessmentHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white shadow rounded-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-900 mb-4\",\n              children: \"Available Assessments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n              children: availableAssessments.map(assessment => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium text-gray-900 mb-2\",\n                  children: assessment.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 mb-4\",\n                  children: assessment.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-2 mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\",\n                    children: [assessment.questions.length, \" Questions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm\",\n                    children: [assessment.totalTime, \" \", assessment.timerType === TIMER_TYPES.PER_QUESTION ? 'min per question' : 'min total']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleStartAssessment(assessment),\n                  className: \"btn-primary w-full\",\n                  children: \"Start Assessment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)]\n              }, assessment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this);\n      case 'assessment':\n        const currentQuestion = currentAssessment.questions[currentQuestionIndex];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-3xl mx-auto space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-900\",\n              children: currentAssessment.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), currentAssessment.timerType === TIMER_TYPES.FULL_TEST && /*#__PURE__*/_jsxDEV(Timer, {\n              initialTime: currentAssessment.totalTime * 60,\n              onTimeUp: handleTimeUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: [\"Question \", currentQuestionIndex + 1, \" of \", currentAssessment.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AssessmentQuestion, {\n            question: currentQuestion,\n            onAnswer: handleAnswer,\n            currentAnswer: answers[currentQuestion.id],\n            timerType: currentAssessment.timerType,\n            onTimeUp: handleTimeUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePreviousQuestion,\n              disabled: currentQuestionIndex === 0,\n              className: \"btn-secondary disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextQuestion,\n              className: \"btn-primary\",\n              children: currentQuestionIndex === currentAssessment.questions.length - 1 ? 'Submit' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this);\n      case 'result':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-3xl mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(AssessmentResult, {\n            assessment: currentAssessment,\n            score: score,\n            answers: answers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 flex justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('dashboard'),\n              className: \"btn-primary\",\n              children: \"Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n_s(SelfAssessmentPage, \"emMf7H0Hi5J19g9bHLI5chdR4f8=\", false, function () {\n  return [useAuth];\n});\n_c = SelfAssessmentPage;\nexport default SelfAssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"SelfAssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","AssessmentDashboard","AssessmentQuestion","AssessmentResult","Timer","ASSESSMENT_TYPES","TIMER_TYPES","jsxDEV","_jsxDEV","SelfAssessmentPage","_s","user","currentView","setCurrentView","currentAssessment","setCurrentAssessment","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","assessmentHistory","setAssessmentHistory","score","setScore","availableAssessments","setAvailableAssessments","id","title","completedAt","createAssessment","description","type","POINT_BASED","timerType","FULL_TEST","totalTime","passingScore","questions","createQuestion","text","options","points","correctAnswer","PER_QUESTION","handleStartAssessment","assessment","handleAnswer","questionId","answerIndex","prev","handleNextQuestion","length","handleSubmitAssessment","handlePreviousQuestion","totalQuestions","correctAnswers","Object","entries","filter","question","find","q","calculatedScore","Math","round","newHistory","Date","toISOString","handleTimeUp","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","map","currentQuestion","initialTime","onTimeUp","onAnswer","currentAnswer","disabled","_c","$RefreshReg$"],"sources":["E:/my-lms-frontend (2)/my-lms-frontend/src/assessment/pages/SelfAssessmentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport AssessmentDashboard from '../components/AssessmentDashboard';\r\nimport AssessmentQuestion from '../components/AssessmentQuestion';\r\nimport AssessmentResult from '../components/AssessmentResult';\r\nimport Timer from '../components/Timer';\r\nimport { ASSESSMENT_TYPES, TIMER_TYPES } from '../utils/types';\r\n\r\nconst SelfAssessmentPage = () => {\r\n  const { user } = useAuth();\r\n  const [currentView, setCurrentView] = useState('dashboard'); // 'dashboard', 'assessment', 'result'\r\n  const [currentAssessment, setCurrentAssessment] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [assessmentHistory, setAssessmentHistory] = useState([]);\r\n  const [score, setScore] = useState(null);\r\n  const [availableAssessments, setAvailableAssessments] = useState([]);\r\n\r\n  // Mock data for demonstration\r\n  useEffect(() => {\r\n    // In a real app, this would fetch from your API\r\n    setAssessmentHistory([\r\n      {\r\n        id: '1',\r\n        title: 'JavaScript Fundamentals',\r\n        score: 85,\r\n        completedAt: '2024-03-15T10:30:00Z'\r\n      },\r\n      {\r\n        id: '2',\r\n        title: 'React Basics',\r\n        score: 92,\r\n        completedAt: '2024-03-14T15:45:00Z'\r\n      }\r\n    ]);\r\n\r\n    // Also fetch available assessments\r\n    setAvailableAssessments([\r\n      createAssessment({\r\n        id: '1',\r\n        title: 'JavaScript Fundamentals',\r\n        description: 'Test your knowledge of JavaScript basics',\r\n        type: ASSESSMENT_TYPES.POINT_BASED,\r\n        timerType: TIMER_TYPES.FULL_TEST,\r\n        totalTime: 30, // 30 minutes\r\n        passingScore: 70,\r\n        questions: [\r\n          createQuestion({\r\n            id: 'q1',\r\n            text: 'What is the correct way to declare a variable in JavaScript?',\r\n            type: ASSESSMENT_TYPES.POINT_BASED,\r\n            options: [\r\n              'var x = 5;',\r\n              'const x = 5;',\r\n              'variable x = 5;',\r\n              'x = 5;'\r\n            ],\r\n            points: 10,\r\n            correctAnswer: 1 // index of 'const x = 5;'\r\n          }),\r\n          createQuestion({\r\n            id: 'q2',\r\n            text: 'Which of the following is NOT a JavaScript data type?',\r\n            type: ASSESSMENT_TYPES.POINT_BASED,\r\n            options: [\r\n              'String',\r\n              'Boolean',\r\n              'Character',\r\n              'Number'\r\n            ],\r\n            points: 10,\r\n            correctAnswer: 2 // index of 'Character'\r\n          }),\r\n          createQuestion({\r\n            id: 'q3',\r\n            text: 'What does HTML stand for?',\r\n            type: ASSESSMENT_TYPES.POINT_BASED,\r\n            options: [\r\n              'Hyper Text Markup Language',\r\n              'High-level Text Management Language',\r\n              'Hyperlink and Text Markup Language',\r\n              'Home Tool Markup Language'\r\n            ],\r\n            points: 10,\r\n            correctAnswer: 0 // index of 'Hyper Text Markup Language'\r\n          }),\r\n        ]\r\n      }),\r\n      createAssessment({\r\n        id: '2',\r\n        title: 'React Basics',\r\n        description: 'Test your understanding of React fundamentals',\r\n        type: ASSESSMENT_TYPES.POINT_BASED,\r\n        timerType: TIMER_TYPES.PER_QUESTION,\r\n        totalTime: 60, // 60 seconds per question\r\n        passingScore: 70,\r\n        questions: [\r\n          createQuestion({\r\n            id: 'rq1',\r\n            text: 'What is the primary function of React?',\r\n            type: ASSESSMENT_TYPES.POINT_BASED,\r\n            options: [\r\n              'To manage databases',\r\n              'To build user interfaces',\r\n              'To handle server-side logic',\r\n              'To style web pages'\r\n            ],\r\n            points: 10,\r\n            correctAnswer: 1 // index of 'To build user interfaces'\r\n          }),\r\n          createQuestion({\r\n            id: 'rq2',\r\n            text: 'Which of the following is used to pass data to a Component from outside?',\r\n            type: ASSESSMENT_TYPES.POINT_BASED,\r\n            options: [\r\n              'setState',\r\n              'render with arguments',\r\n              'props',\r\n              'PropTypes'\r\n            ],\r\n            points: 10,\r\n            correctAnswer: 2 // index of 'props'\r\n          }),\r\n        ]\r\n      }),\r\n    ]);\r\n  }, []);\r\n\r\n  const handleStartAssessment = (assessment) => {\r\n    setCurrentAssessment(assessment);\r\n    setCurrentQuestionIndex(0);\r\n    setAnswers({});\r\n    setCurrentView('assessment');\r\n  };\r\n\r\n  const handleAnswer = (questionId, answerIndex) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: answerIndex\r\n    }));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < currentAssessment.questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      handleSubmitAssessment();\r\n    }\r\n  };\r\n\r\n  const handlePreviousQuestion = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmitAssessment = () => {\r\n    // Calculate score\r\n    const totalQuestions = currentAssessment.questions.length;\r\n    const correctAnswers = Object.entries(answers).filter(([questionId, answerIndex]) => {\r\n      const question = currentAssessment.questions.find(q => q.id === questionId);\r\n      return question.correctAnswer === answerIndex;\r\n    }).length;\r\n\r\n    const calculatedScore = Math.round((correctAnswers / totalQuestions) * 100);\r\n    setScore(calculatedScore);\r\n\r\n    // Add to history\r\n    const newHistory = {\r\n      id: currentAssessment.id,\r\n      title: currentAssessment.title,\r\n      score: calculatedScore,\r\n      completedAt: new Date().toISOString()\r\n    };\r\n    setAssessmentHistory(prev => [newHistory, ...prev]);\r\n\r\n    setCurrentView('result');\r\n  };\r\n\r\n  const handleTimeUp = () => {\r\n    if (currentAssessment.timerType === TIMER_TYPES.PER_QUESTION) {\r\n      handleNextQuestion();\r\n    } else {\r\n      handleSubmitAssessment();\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (currentView) {\r\n      case 'dashboard':\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">Self-Assessments</h1>\r\n              {user?.role === 'admin' && (\r\n                <button\r\n                  onClick={() => setCurrentView('admin')}\r\n                  className=\"btn-primary\"\r\n                >\r\n                  Manage Assessments\r\n                </button>\r\n              )}\r\n            </div>\r\n            <AssessmentDashboard assessmentHistory={assessmentHistory} />\r\n\r\n            {/* Available Assessments */}\r\n            <div className=\"bg-white shadow rounded-lg p-6\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Available Assessments</h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {availableAssessments.map((assessment) => (\r\n                  <div key={assessment.id} className=\"border rounded-lg p-6\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{assessment.title}</h3>\r\n                    <p className=\"text-gray-600 mb-4\">{assessment.description}</p>\r\n                    <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                      <span className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\">\r\n                        {assessment.questions.length} Questions\r\n                      </span>\r\n                      <span className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm\">\r\n                        {assessment.totalTime} {assessment.timerType === TIMER_TYPES.PER_QUESTION ? 'min per question' : 'min total'}\r\n                      </span>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => handleStartAssessment(assessment)}\r\n                      className=\"btn-primary w-full\"\r\n                    >\r\n                      Start Assessment\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'assessment':\r\n        const currentQuestion = currentAssessment.questions[currentQuestionIndex];\r\n        return (\r\n          <div className=\"max-w-3xl mx-auto space-y-6\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">\r\n                {currentAssessment.title}\r\n              </h2>\r\n              {currentAssessment.timerType === TIMER_TYPES.FULL_TEST && (\r\n                <Timer\r\n                  initialTime={currentAssessment.totalTime * 60}\r\n                  onTimeUp={handleTimeUp}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <span className=\"text-sm font-medium text-gray-500\">\r\n                Question {currentQuestionIndex + 1} of {currentAssessment.questions.length}\r\n              </span>\r\n            </div>\r\n\r\n            <AssessmentQuestion\r\n              question={currentQuestion}\r\n              onAnswer={handleAnswer}\r\n              currentAnswer={answers[currentQuestion.id]}\r\n              timerType={currentAssessment.timerType}\r\n              onTimeUp={handleTimeUp}\r\n            />\r\n\r\n            <div className=\"flex justify-between\">\r\n              <button\r\n                onClick={handlePreviousQuestion}\r\n                disabled={currentQuestionIndex === 0}\r\n                className=\"btn-secondary disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                onClick={handleNextQuestion}\r\n                className=\"btn-primary\"\r\n              >\r\n                {currentQuestionIndex === currentAssessment.questions.length - 1\r\n                  ? 'Submit'\r\n                  : 'Next'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'result':\r\n        return (\r\n          <div className=\"max-w-3xl mx-auto\">\r\n            <AssessmentResult\r\n              assessment={currentAssessment}\r\n              score={score}\r\n              answers={answers}\r\n            />\r\n            <div className=\"mt-6 flex justify-center\">\r\n              <button\r\n                onClick={() => setCurrentView('dashboard')}\r\n                className=\"btn-primary\"\r\n              >\r\n                Back to Dashboard\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelfAssessmentPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}