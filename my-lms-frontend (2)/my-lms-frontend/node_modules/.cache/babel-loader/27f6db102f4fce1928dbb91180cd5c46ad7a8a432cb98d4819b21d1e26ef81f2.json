{"ast":null,"code":"import _objectSpread from\"E:/lms-assesment-frontend/my-lms-frontend (2)/my-lms-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{ASSESSMENT_TYPES,TIMER_TYPES,createAssessment,createQuestion}from'../utils/types';import{toast}from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminAssessmentManager=_ref=>{let{assessments,onSave,onDelete}=_ref;const[selectedAssessment,setSelectedAssessment]=useState(null);const[isEditing,setIsEditing]=useState(false);const[showCreateForm,setShowCreateForm]=useState(false);const[formData,setFormData]=useState({title:'',description:'',type:ASSESSMENT_TYPES.LIKERT,timerType:TIMER_TYPES.NONE,totalTime:0,passingScore:70,questions:[],isFree:false,couponCode:'',price:0});const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const handleQuestionChange=(index,field,value)=>{setFormData(prev=>{const newQuestions=[...(prev.questions||[])];newQuestions[index]=_objectSpread(_objectSpread({},newQuestions[index]),{},{[field]:value});return _objectSpread(_objectSpread({},prev),{},{questions:newQuestions});});};const addQuestion=()=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{questions:[...(prev.questions||[]),createQuestion({id:Date.now().toString(),text:'',type:prev.type,options:['Option 1','Option 2']// Start with two generic options\n})]}));};const removeQuestion=index=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{questions:(prev.questions||[]).filter((_,i)=>i!==index)}));};const handleSubmit=e=>{e.preventDefault();const assessment=createAssessment(_objectSpread(_objectSpread({},formData),{},{id:(selectedAssessment===null||selectedAssessment===void 0?void 0:selectedAssessment.id)||Date.now().toString()}));onSave(assessment);resetForm();};const resetForm=()=>{setFormData({title:'',description:'',type:ASSESSMENT_TYPES.LIKERT,timerType:TIMER_TYPES.NONE,totalTime:0,passingScore:70,questions:[],isFree:false,couponCode:'',price:0});setSelectedAssessment(null);setIsEditing(false);setShowCreateForm(false);};const editAssessment=assessment=>{setSelectedAssessment(assessment);setFormData(_objectSpread(_objectSpread({},assessment),{},{questions:Array.isArray(assessment.questions)?[...assessment.questions]:[]}));setIsEditing(true);};const handleFileSelect=e=>{const file=e.target.files[0];if(file){const reader=new FileReader();reader.onload=event=>{try{const fileContent=event.target.result;const fileExtension=file.name.split('.').pop().toLowerCase();if(fileExtension==='json'){const parsedData=JSON.parse(fileContent);if(parsedData.title&&parsedData.description&&Array.isArray(parsedData.questions)){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{questions:[...(prev.questions||[]),...parsedData.questions.map(q=>createQuestion(q))]}));setIsEditing(true);setSelectedAssessment(null);toast.success(\"Assessment questions loaded from JSON file! Added \".concat(parsedData.questions.length,\" questions.\"));}else{toast.error('Invalid JSON format in file for assessment. Missing title, description, or questions array.');}}else if(fileExtension==='csv'){const lines=fileContent.split(/\\r?\\n/).filter(line=>line.trim()!=='');if(lines.length>1){// Expect at least header and one data row\nconst headers=lines[0].split(',').map(h=>h.trim());const csvQuestions=[];for(let i=1;i<lines.length;i++){const values=lines[i].split(',').map(v=>v.trim());const questionData={};headers.forEach((header,index)=>{questionData[header]=values[index];});const options=[];for(let j=1;;j++){const optionKey=\"Option\".concat(j);if(questionData[optionKey]){options.push(questionData[optionKey]);}else{break;}}if(questionData.QuestionText&&options.length>0&&questionData.CorrectAnswerIndex!==undefined){csvQuestions.push(createQuestion({id:\"csv-q-\".concat(i,\"-\").concat(Date.now()),text:questionData.QuestionText,type:questionData.Type||ASSESSMENT_TYPES.POINT_BASED,options:options,points:parseInt(questionData.Points)||1,timeLimit:parseInt(questionData.TimeLimit)||0,correctAnswer:parseInt(questionData.CorrectAnswerIndex)}));}}if(csvQuestions.length>0){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{questions:[...(prev.questions||[]),...csvQuestions]}));setIsEditing(true);setSelectedAssessment(null);toast.success(\"Assessment questions loaded from CSV! Added \".concat(csvQuestions.length,\" questions.\"));}else{toast.error('No valid questions found in CSV file. Please check format and ensure all required columns are present.');}}else{toast.error('CSV file is empty or malformed (requires header and at least one question row).');}}else if(fileExtension==='docx'){toast.error('Word (.docx) structured content parsing is not supported on the frontend. A backend server is required for this functionality.');// Optionally, set basic info from filename - will not add questions\nsetFormData(prev=>_objectSpread(_objectSpread({},prev),{},{title:file.name.replace('.docx','')||prev.title,description:'Questions cannot be extracted from DOCX on frontend.',questions:[...(prev.questions||[])]}));setIsEditing(true);setSelectedAssessment(null);}else{toast.error('Unsupported file type. Please upload a JSON, CSV, or DOCX file.');}}catch(error){toast.error('Error processing file: '+error.message);}};reader.readAsText(file);}else{toast.error('No file selected.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900\",children:\"Admin Panel\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Total Users\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-blue-600\",children:\"1,234\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-500\",children:\"+12%\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Active Courses\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-blue-600\",children:\"45\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-500\",children:\"+5%\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Total Assessments\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-blue-600\",children:\"89\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-500\",children:\"-2%\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Average Score\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-purple-600\",children:\"78%\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-500\",children:\"+4%\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Quick Actions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-6 rounded-lg text-left\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-users text-2xl text-blue-600 mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Manage Users\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"View and manage user accounts\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-6 rounded-lg text-left\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-bar text-2xl text-green-600 mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"View Analytics\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Track platform performance\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-6 rounded-lg text-left\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus-circle text-2xl text-purple-600 mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Add New Course\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Create and upload course content\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg p-6 text-center\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{resetForm();setShowCreateForm(true);},className:\"btn-primary w-full\",type:\"button\",children:\"Create New Assessment\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Manage Existing Assessments\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:assessments.map(assessment=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:assessment.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:assessment.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 mb-4\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\",children:[assessment.questions.length,\" Questions\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm\",children:[assessment.totalTime,\" \",assessment.timerType===TIMER_TYPES.PER_QUESTION?'min per question':'min total']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>editAssessment(assessment),className:\"btn-secondary flex-1\",children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onDelete(assessment.id),className:\"btn-danger flex-1\",children:\"Delete\"})]})]},assessment.id))})]}),(isEditing||showCreateForm)&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:isEditing?'Edit Assessment':'Create New Assessment'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",className:\"block text-sm font-medium text-gray-700\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",name:\"title\",value:formData.title,onChange:handleInputChange,className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",className:\"block text-sm font-medium text-gray-700\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",name:\"description\",value:formData.description,onChange:handleInputChange,rows:\"3\",className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"type\",className:\"block text-sm font-medium text-gray-700\",children:\"Assessment Type\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"type\",name:\"type\",value:formData.type,onChange:handleInputChange,className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:ASSESSMENT_TYPES.LIKERT,children:\"Likert-Scale\"}),/*#__PURE__*/_jsx(\"option\",{value:ASSESSMENT_TYPES.POINT_BASED,children:\"Point-Based\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"timerType\",className:\"block text-sm font-medium text-gray-700\",children:\"Timer Type\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"timerType\",name:\"timerType\",value:formData.timerType,onChange:handleInputChange,className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:TIMER_TYPES.NONE,children:\"No Timer\"}),/*#__PURE__*/_jsx(\"option\",{value:TIMER_TYPES.FULL_TEST,children:\"Full Test Timer\"}),/*#__PURE__*/_jsx(\"option\",{value:TIMER_TYPES.PER_QUESTION,children:\"Per Question Timer\"})]})]}),formData.timerType!==TIMER_TYPES.NONE&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"totalTime\",className:\"block text-sm font-medium text-gray-700\",children:\"Total Time (minutes)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"totalTime\",name:\"totalTime\",value:formData.totalTime,onChange:handleInputChange,className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",min:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"passingScore\",className:\"block text-sm font-medium text-gray-700\",children:\"Passing Score (%)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"passingScore\",name:\"passingScore\",value:formData.passingScore,onChange:handleInputChange,className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",min:\"0\",max:\"100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"isFree\",name:\"isFree\",checked:formData.isFree,onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{isFree:e.target.checked})),className:\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"isFree\",className:\"text-sm font-medium text-gray-700\",children:\"This assessment is free\"})]}),!formData.isFree&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"price\",className:\"block text-sm font-medium text-gray-700\",children:\"Price ($)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"price\",name:\"price\",value:formData.price,onChange:handleInputChange,className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",min:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"couponCode\",className:\"block text-sm font-medium text-gray-700\",children:\"Coupon Code (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"couponCode\",name:\"couponCode\",value:formData.couponCode,onChange:handleInputChange,className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",placeholder:\"e.g., BLACKFRIDAY20\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",className:\"block text-sm font-medium text-gray-700\",children:\"Upload Questions (JSON, CSV, DOCX)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",name:\"file-upload\",type:\"file\",accept:\".json,.csv,.docx\",onChange:handleFileSelect,className:\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Note: DOCX parsing for structured questions is not supported on the frontend. Only JSON and CSV (strict format) can append questions.\"})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900 mt-6 mb-2\",children:\"Questions\"}),formData.questions.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"No questions added yet. Click 'Add Question' to start or upload a file.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:(formData.questions||[]).map((question,qIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"border p-4 rounded-md space-y-3 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:[\"Question \",qIndex+1]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeQuestion(qIndex),className:\"text-red-600 hover:text-red-900 text-sm\",children:\"Remove\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"question-text-\".concat(qIndex),className:\"block text-sm font-medium text-gray-700\",children:\"Text\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"question-text-\".concat(qIndex),value:question.text,onChange:e=>handleQuestionChange(qIndex,'text',e.target.value),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"question-type-\".concat(qIndex),className:\"block text-sm font-medium text-gray-700\",children:\"Question Type\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"question-type-\".concat(qIndex),value:question.type,onChange:e=>handleQuestionChange(qIndex,'type',e.target.value),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:ASSESSMENT_TYPES.LIKERT,children:\"Likert-Scale\"}),/*#__PURE__*/_jsx(\"option\",{value:ASSESSMENT_TYPES.POINT_BASED,children:\"Point-Based\"})]})]}),question.type===ASSESSMENT_TYPES.POINT_BASED&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"question-points-\".concat(qIndex),className:\"block text-sm font-medium text-gray-700\",children:\"Points\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"question-points-\".concat(qIndex),value:question.points,onChange:e=>handleQuestionChange(qIndex,'points',parseInt(e.target.value)||0),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",min:\"0\"})]}),question.type===ASSESSMENT_TYPES.POINT_BASED&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Options\"}),question.options.map((option,oIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:option,onChange:e=>{const newOptions=[...question.options];newOptions[oIndex]=e.target.value;handleQuestionChange(qIndex,'options',newOptions);},className:\"flex-1 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",placeholder:\"Option \".concat(oIndex+1)}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{const newOptions=question.options.filter((_,i)=>i!==oIndex);handleQuestionChange(qIndex,'options',newOptions);},className:\"text-red-600 hover:text-red-900 text-sm\",children:\"Remove\"})]},oIndex)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{const newOptions=[...question.options,\"Option \".concat(question.options.length+1)];handleQuestionChange(qIndex,'options',newOptions);},className:\"mt-2 btn-secondary\",children:\"Add Option\"})]}),question.type===ASSESSMENT_TYPES.POINT_BASED&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"correct-answer-\".concat(qIndex),className:\"block text-sm font-medium text-gray-700\",children:\"Correct Answer (Index)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"correct-answer-\".concat(qIndex),value:question.correctAnswer,onChange:e=>handleQuestionChange(qIndex,'correctAnswer',parseInt(e.target.value)||0),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",min:\"0\",max:question.options.length-1}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Enter the 0-based index of the correct option (e.g., 0 for the first option, 1 for the second).\"})]}),question.type===ASSESSMENT_TYPES.LIKERT&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"likert-scale-\".concat(qIndex),className:\"block text-sm font-medium text-gray-700\",children:\"Likert Scale Description\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Likert scale questions typically use a fixed set of options (e.g., Strongly Disagree to Strongly Agree). The score is usually based on the selected option's value.\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"question-time-limit-\".concat(qIndex),className:\"block text-sm font-medium text-gray-700\",children:\"Time Limit (seconds, 0 for none)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"question-time-limit-\".concat(qIndex),value:question.timeLimit,onChange:e=>handleQuestionChange(qIndex,'timeLimit',parseInt(e.target.value)||0),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",min:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"branch-logic-\".concat(qIndex),className:\"block text-sm font-medium text-gray-700\",children:\"Branching Logic (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"branch-logic-\".concat(qIndex),value:question.branchLogic||'',onChange:e=>handleQuestionChange(qIndex,'branchLogic',e.target.value),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",placeholder:\"e.g., if answer is A, skip to question 5\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"This is a placeholder for adaptive assessment logic. Implement backend parsing for complex rules.\"})]})]},question.id||qIndex))}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addQuestion,className:\"btn-secondary mt-4\",children:\"Add Question\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary\",children:isEditing?'Save Changes':'Create Assessment'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:resetForm,className:\"btn-secondary\",children:\"Cancel\"})]})]})]})]});};export default AdminAssessmentManager;","map":{"version":3,"names":["React","useState","ASSESSMENT_TYPES","TIMER_TYPES","createAssessment","createQuestion","toast","jsx","_jsx","jsxs","_jsxs","AdminAssessmentManager","_ref","assessments","onSave","onDelete","selectedAssessment","setSelectedAssessment","isEditing","setIsEditing","showCreateForm","setShowCreateForm","formData","setFormData","title","description","type","LIKERT","timerType","NONE","totalTime","passingScore","questions","isFree","couponCode","price","handleInputChange","e","name","value","target","prev","_objectSpread","handleQuestionChange","index","field","newQuestions","addQuestion","id","Date","now","toString","text","options","removeQuestion","filter","_","i","handleSubmit","preventDefault","assessment","resetForm","editAssessment","Array","isArray","handleFileSelect","file","files","reader","FileReader","onload","event","fileContent","result","fileExtension","split","pop","toLowerCase","parsedData","JSON","parse","map","q","success","concat","length","error","lines","line","trim","headers","h","csvQuestions","values","v","questionData","forEach","header","j","optionKey","push","QuestionText","CorrectAnswerIndex","undefined","Type","POINT_BASED","points","parseInt","Points","timeLimit","TimeLimit","correctAnswer","replace","message","readAsText","className","children","onClick","PER_QUESTION","onSubmit","htmlFor","onChange","required","rows","FULL_TEST","min","max","checked","placeholder","accept","question","qIndex","option","oIndex","newOptions","branchLogic"],"sources":["E:/lms-assesment-frontend/my-lms-frontend (2)/my-lms-frontend/src/assessment/components/AdminAssessmentManager.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ASSESSMENT_TYPES, TIMER_TYPES, createAssessment, createQuestion } from '../utils/types';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst AdminAssessmentManager = ({ assessments, onSave, onDelete }) => {\r\n  const [selectedAssessment, setSelectedAssessment] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    type: ASSESSMENT_TYPES.LIKERT,\r\n    timerType: TIMER_TYPES.NONE,\r\n    totalTime: 0,\r\n    passingScore: 70,\r\n    questions: [],\r\n    isFree: false,\r\n    couponCode: '',\r\n    price: 0\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleQuestionChange = (index, field, value) => {\r\n    setFormData((prev) => {\r\n      const newQuestions = [...(prev.questions || [])];\r\n      newQuestions[index] = {\r\n        ...newQuestions[index],\r\n        [field]: value\r\n      };\r\n      return { ...prev, questions: newQuestions };\r\n    });\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      questions: [\r\n        ...(prev.questions || []),\r\n        createQuestion({\r\n          id: Date.now().toString(),\r\n          text: '',\r\n          type: prev.type,\r\n          options: ['Option 1', 'Option 2'] // Start with two generic options\r\n        })\r\n      ]\r\n    }));\r\n  };\r\n\r\n  const removeQuestion = (index) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      questions: (prev.questions || []).filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const assessment = createAssessment({\r\n      ...formData,\r\n      id: selectedAssessment?.id || Date.now().toString()\r\n    });\r\n    onSave(assessment);\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      title: '',\r\n      description: '',\r\n      type: ASSESSMENT_TYPES.LIKERT,\r\n      timerType: TIMER_TYPES.NONE,\r\n      totalTime: 0,\r\n      passingScore: 70,\r\n      questions: [],\r\n      isFree: false,\r\n      couponCode: '',\r\n      price: 0\r\n    });\r\n    setSelectedAssessment(null);\r\n    setIsEditing(false);\r\n    setShowCreateForm(false);\r\n  };\r\n\r\n  const editAssessment = (assessment) => {\r\n    setSelectedAssessment(assessment);\r\n    setFormData({\r\n      ...assessment,\r\n      questions: Array.isArray(assessment.questions) ? [...assessment.questions] : []\r\n    });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleFileSelect = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event) => {\r\n        try {\r\n          const fileContent = event.target.result;\r\n          const fileExtension = file.name.split('.').pop().toLowerCase();\r\n\r\n          if (fileExtension === 'json') {\r\n            const parsedData = JSON.parse(fileContent);\r\n            if (parsedData.title && parsedData.description && Array.isArray(parsedData.questions)) {\r\n              setFormData(prev => ({\r\n                ...prev,\r\n                questions: [...(prev.questions || []), ...parsedData.questions.map(q => createQuestion(q))]\r\n              }));\r\n              setIsEditing(true);\r\n              setSelectedAssessment(null);\r\n              toast.success(`Assessment questions loaded from JSON file! Added ${parsedData.questions.length} questions.`);\r\n            } else {\r\n              toast.error('Invalid JSON format in file for assessment. Missing title, description, or questions array.');\r\n            }\r\n          } else if (fileExtension === 'csv') {\r\n            const lines = fileContent.split(/\\r?\\n/).filter(line => line.trim() !== '');\r\n            if (lines.length > 1) { // Expect at least header and one data row\r\n              const headers = lines[0].split(',').map(h => h.trim());\r\n              const csvQuestions = [];\r\n\r\n              for (let i = 1; i < lines.length; i++) {\r\n                const values = lines[i].split(',').map(v => v.trim());\r\n                const questionData = {};\r\n                headers.forEach((header, index) => {\r\n                  questionData[header] = values[index];\r\n                });\r\n\r\n                const options = [];\r\n                for (let j = 1; ; j++) {\r\n                  const optionKey = `Option${j}`;\r\n                  if (questionData[optionKey]) {\r\n                    options.push(questionData[optionKey]);\r\n                  } else {\r\n                    break;\r\n                  }\r\n                }\r\n\r\n                if (questionData.QuestionText && options.length > 0 && questionData.CorrectAnswerIndex !== undefined) {\r\n                  csvQuestions.push(createQuestion({\r\n                    id: `csv-q-${i}-${Date.now()}`,\r\n                    text: questionData.QuestionText,\r\n                    type: questionData.Type || ASSESSMENT_TYPES.POINT_BASED,\r\n                    options: options,\r\n                    points: parseInt(questionData.Points) || 1,\r\n                    timeLimit: parseInt(questionData.TimeLimit) || 0,\r\n                    correctAnswer: parseInt(questionData.CorrectAnswerIndex)\r\n                  }));\r\n                }\r\n              }\r\n\r\n              if (csvQuestions.length > 0) {\r\n                setFormData(prev => ({\r\n                  ...prev,\r\n                  questions: [...(prev.questions || []), ...csvQuestions]\r\n                }));\r\n                setIsEditing(true);\r\n                setSelectedAssessment(null);\r\n                toast.success(`Assessment questions loaded from CSV! Added ${csvQuestions.length} questions.`);\r\n              } else {\r\n                toast.error('No valid questions found in CSV file. Please check format and ensure all required columns are present.');\r\n              }\r\n            } else {\r\n              toast.error('CSV file is empty or malformed (requires header and at least one question row).');\r\n            }\r\n          } else if (fileExtension === 'docx') {\r\n            toast.error('Word (.docx) structured content parsing is not supported on the frontend. A backend server is required for this functionality.');\r\n            // Optionally, set basic info from filename - will not add questions\r\n            setFormData(prev => ({\r\n              ...prev,\r\n              title: file.name.replace('.docx', '') || prev.title,\r\n              description: 'Questions cannot be extracted from DOCX on frontend.',\r\n              questions: [...(prev.questions || [])]\r\n            }));\r\n            setIsEditing(true);\r\n            setSelectedAssessment(null);\r\n          } else {\r\n            toast.error('Unsupported file type. Please upload a JSON, CSV, or DOCX file.');\r\n          }\r\n        } catch (error) {\r\n          toast.error('Error processing file: ' + error.message);\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      toast.error('No file selected.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h1 className=\"text-3xl font-bold text-gray-900\">Admin Panel</h1>\r\n\r\n      {/* Stats Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Total Users</h3>\r\n          <p className=\"text-3xl font-bold text-blue-600\">1,234</p>\r\n          <p className=\"text-sm text-green-500\">+12%</p>\r\n        </div>\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Active Courses</h3>\r\n          <p className=\"text-3xl font-bold text-blue-600\">45</p>\r\n          <p className=\"text-sm text-green-500\">+5%</p>\r\n        </div>\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Total Assessments</h3>\r\n          <p className=\"text-3xl font-bold text-blue-600\">89</p>\r\n          <p className=\"text-sm text-red-500\">-2%</p>\r\n        </div>\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">Average Score</h3>\r\n          <p className=\"text-3xl font-bold text-purple-600\">78%</p>\r\n          <p className=\"text-sm text-green-500\">+4%</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Quick Actions</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <div className=\"bg-gray-100 p-6 rounded-lg text-left\">\r\n            <i className=\"fas fa-users text-2xl text-blue-600 mb-3\"></i>\r\n            <h4 className=\"font-medium text-gray-900\">Manage Users</h4>\r\n            <p className=\"text-sm text-gray-600\">View and manage user accounts</p>\r\n          </div>\r\n          <div className=\"bg-gray-100 p-6 rounded-lg text-left\">\r\n            <i className=\"fas fa-chart-bar text-2xl text-green-600 mb-3\"></i>\r\n            <h4 className=\"font-medium text-gray-900\">View Analytics</h4>\r\n            <p className=\"text-sm text-gray-600\">Track platform performance</p>\r\n          </div>\r\n          <div className=\"bg-gray-100 p-6 rounded-lg text-left\">\r\n            <i className=\"fas fa-plus-circle text-2xl text-purple-600 mb-3\"></i>\r\n            <h4 className=\"font-medium text-gray-900\">Add New Course</h4>\r\n            <p className=\"text-sm text-gray-600\">Create and upload course content</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Create New Assessment Button */}\r\n      <div className=\"bg-white shadow rounded-lg p-6 text-center\">\r\n        <button\r\n          onClick={() => {\r\n            resetForm();\r\n            setShowCreateForm(true);\r\n          }}\r\n          className=\"btn-primary w-full\"\r\n          type=\"button\"\r\n        >\r\n          Create New Assessment\r\n        </button>\r\n      </div>\r\n\r\n      {/* Assessment List */}\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Manage Existing Assessments</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {assessments.map((assessment) => (\r\n            <div key={assessment.id} className=\"border rounded-lg p-6\">\r\n              <h4 className=\"text-lg font-medium text-gray-900 mb-2\">{assessment.title}</h4>\r\n              <p className=\"text-gray-600 mb-4\">{assessment.description}</p>\r\n              <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                <span className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\">\r\n                  {assessment.questions.length} Questions\r\n                </span>\r\n                <span className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm\">\r\n                  {assessment.totalTime} {assessment.timerType === TIMER_TYPES.PER_QUESTION ? 'min per question' : 'min total'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  onClick={() => editAssessment(assessment)}\r\n                  className=\"btn-secondary flex-1\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => onDelete(assessment.id)}\r\n                  className=\"btn-danger flex-1\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Assessment Form (for creating/editing) */}\r\n      {(isEditing || showCreateForm) && (\r\n        <div className=\"bg-white shadow rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n            {isEditing ? 'Edit Assessment' : 'Create New Assessment'}\r\n          </h3>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={formData.title}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows=\"3\"\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">Assessment Type</label>\r\n              <select\r\n                id=\"type\"\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n              >\r\n                <option value={ASSESSMENT_TYPES.LIKERT}>Likert-Scale</option>\r\n                <option value={ASSESSMENT_TYPES.POINT_BASED}>Point-Based</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"timerType\" className=\"block text-sm font-medium text-gray-700\">Timer Type</label>\r\n              <select\r\n                id=\"timerType\"\r\n                name=\"timerType\"\r\n                value={formData.timerType}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n              >\r\n                <option value={TIMER_TYPES.NONE}>No Timer</option>\r\n                <option value={TIMER_TYPES.FULL_TEST}>Full Test Timer</option>\r\n                <option value={TIMER_TYPES.PER_QUESTION}>Per Question Timer</option>\r\n              </select>\r\n            </div>\r\n            {formData.timerType !== TIMER_TYPES.NONE && (\r\n              <div>\r\n                <label htmlFor=\"totalTime\" className=\"block text-sm font-medium text-gray-700\">Total Time (minutes)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"totalTime\"\r\n                  name=\"totalTime\"\r\n                  value={formData.totalTime}\r\n                  onChange={handleInputChange}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div>\r\n              <label htmlFor=\"passingScore\" className=\"block text-sm font-medium text-gray-700\">Passing Score (%)</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"passingScore\"\r\n                name=\"passingScore\"\r\n                value={formData.passingScore}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                min=\"0\" max=\"100\"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"isFree\"\r\n                name=\"isFree\"\r\n                checked={formData.isFree}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, isFree: e.target.checked }))}\r\n                className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n              />\r\n              <label htmlFor=\"isFree\" className=\"text-sm font-medium text-gray-700\">This assessment is free</label>\r\n            </div>\r\n            {!formData.isFree && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">Price ($)</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    value={formData.price}\r\n                    onChange={handleInputChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"couponCode\" className=\"block text-sm font-medium text-gray-700\">Coupon Code (Optional)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"couponCode\"\r\n                    name=\"couponCode\"\r\n                    value={formData.couponCode}\r\n                    onChange={handleInputChange}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                    placeholder=\"e.g., BLACKFRIDAY20\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* File Upload for Questions */}\r\n            <div className=\"space-y-2\">\r\n              <label htmlFor=\"file-upload\" className=\"block text-sm font-medium text-gray-700\">Upload Questions (JSON, CSV, DOCX)</label>\r\n              <input\r\n                id=\"file-upload\"\r\n                name=\"file-upload\"\r\n                type=\"file\"\r\n                accept=\".json,.csv,.docx\"\r\n                onChange={handleFileSelect}\r\n                className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">Note: DOCX parsing for structured questions is not supported on the frontend. Only JSON and CSV (strict format) can append questions.</p>\r\n            </div>\r\n\r\n            <h4 className=\"text-lg font-medium text-gray-900 mt-6 mb-2\">Questions</h4>\r\n            {formData.questions.length === 0 && (\r\n              <p className=\"text-sm text-gray-600\">No questions added yet. Click 'Add Question' to start or upload a file.</p>\r\n            )}\r\n            <div className=\"space-y-4\">\r\n              {(formData.questions || []).map((question, qIndex) => (\r\n                <div key={question.id || qIndex} className=\"border p-4 rounded-md space-y-3 bg-gray-50\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Question {qIndex + 1}</label>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeQuestion(qIndex)}\r\n                      className=\"text-red-600 hover:text-red-900 text-sm\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor={`question-text-${qIndex}`} className=\"block text-sm font-medium text-gray-700\">Text</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id={`question-text-${qIndex}`}\r\n                      value={question.text}\r\n                      onChange={(e) => handleQuestionChange(qIndex, 'text', e.target.value)}\r\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor={`question-type-${qIndex}`} className=\"block text-sm font-medium text-gray-700\">Question Type</label>\r\n                    <select\r\n                      id={`question-type-${qIndex}`}\r\n                      value={question.type}\r\n                      onChange={(e) => handleQuestionChange(qIndex, 'type', e.target.value)}\r\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                    >\r\n                      <option value={ASSESSMENT_TYPES.LIKERT}>Likert-Scale</option>\r\n                      <option value={ASSESSMENT_TYPES.POINT_BASED}>Point-Based</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  {question.type === ASSESSMENT_TYPES.POINT_BASED && (\r\n                    <div>\r\n                      <label htmlFor={`question-points-${qIndex}`} className=\"block text-sm font-medium text-gray-700\">Points</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id={`question-points-${qIndex}`}\r\n                        value={question.points}\r\n                        onChange={(e) => handleQuestionChange(qIndex, 'points', parseInt(e.target.value) || 0)}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Options for Point-Based and Likert questions */}\r\n                  {question.type === ASSESSMENT_TYPES.POINT_BASED && (\r\n                    <div className=\"space-y-2\">\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Options</label>\r\n                      {question.options.map((option, oIndex) => (\r\n                        <div key={oIndex} className=\"flex items-center space-x-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={option}\r\n                            onChange={(e) => {\r\n                              const newOptions = [...question.options];\r\n                              newOptions[oIndex] = e.target.value;\r\n                              handleQuestionChange(qIndex, 'options', newOptions);\r\n                            }}\r\n                            className=\"flex-1 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                            placeholder={`Option ${oIndex + 1}`}\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              const newOptions = question.options.filter((_, i) => i !== oIndex);\r\n                              handleQuestionChange(qIndex, 'options', newOptions);\r\n                            }}\r\n                            className=\"text-red-600 hover:text-red-900 text-sm\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          const newOptions = [...question.options, `Option ${question.options.length + 1}`];\r\n                          handleQuestionChange(qIndex, 'options', newOptions);\r\n                        }}\r\n                        className=\"mt-2 btn-secondary\"\r\n                      >\r\n                        Add Option\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n\r\n                  {question.type === ASSESSMENT_TYPES.POINT_BASED && (\r\n                    <div>\r\n                      <label htmlFor={`correct-answer-${qIndex}`} className=\"block text-sm font-medium text-gray-700\">Correct Answer (Index)</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        id={`correct-answer-${qIndex}`}\r\n                        value={question.correctAnswer}\r\n                        onChange={(e) => handleQuestionChange(qIndex, 'correctAnswer', parseInt(e.target.value) || 0)}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                        min=\"0\" max={question.options.length - 1}\r\n                      />\r\n                      <p className=\"text-xs text-gray-500 mt-1\">Enter the 0-based index of the correct option (e.g., 0 for the first option, 1 for the second).</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {question.type === ASSESSMENT_TYPES.LIKERT && (\r\n                    <div>\r\n                      <label htmlFor={`likert-scale-${qIndex}`} className=\"block text-sm font-medium text-gray-700\">Likert Scale Description</label>\r\n                      <p className=\"text-sm text-gray-600\">Likert scale questions typically use a fixed set of options (e.g., Strongly Disagree to Strongly Agree). The score is usually based on the selected option's value.</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div>\r\n                    <label htmlFor={`question-time-limit-${qIndex}`} className=\"block text-sm font-medium text-gray-700\">Time Limit (seconds, 0 for none)</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id={`question-time-limit-${qIndex}`}\r\n                      value={question.timeLimit}\r\n                      onChange={(e) => handleQuestionChange(qIndex, 'timeLimit', parseInt(e.target.value) || 0)}\r\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Branching Logic - Simple example: go to next question or skip */}\r\n                  <div>\r\n                    <label htmlFor={`branch-logic-${qIndex}`} className=\"block text-sm font-medium text-gray-700\">Branching Logic (Optional)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id={`branch-logic-${qIndex}`}\r\n                      value={question.branchLogic || ''}\r\n                      onChange={(e) => handleQuestionChange(qIndex, 'branchLogic', e.target.value)}\r\n                      className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"e.g., if answer is A, skip to question 5\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 mt-1\">This is a placeholder for adaptive assessment logic. Implement backend parsing for complex rules.</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={addQuestion}\r\n              className=\"btn-secondary mt-4\"\r\n            >\r\n              Add Question\r\n            </button>\r\n\r\n            <div className=\"flex space-x-4 mt-6\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn-primary\"\r\n              >\r\n                {isEditing ? 'Save Changes' : 'Create Assessment'}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={resetForm}\r\n                className=\"btn-secondary\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAdminAssessmentManager.propTypes = {\r\n  assessments: PropTypes.array.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AdminAssessmentManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}