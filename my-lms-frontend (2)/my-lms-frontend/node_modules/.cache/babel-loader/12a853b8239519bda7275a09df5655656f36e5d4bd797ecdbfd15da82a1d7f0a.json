{"ast":null,"code":"// Assessment Types\nexport const ASSESSMENT_TYPES = {\n  LIKERT: 'likert',\n  POINT_BASED: 'point_based'\n};\n\n// Timer Types\nexport const TIMER_TYPES = {\n  PER_QUESTION: 'per_question',\n  FULL_TEST: 'full_test',\n  NONE: 'none'\n};\n\n// Score Range Interface\nexport const SCORE_RANGES = {\n  EXCELLENT: {\n    min: 90,\n    max: 100,\n    label: 'Excellent',\n    color: 'green'\n  },\n  GOOD: {\n    min: 70,\n    max: 89,\n    label: 'Good',\n    color: 'blue'\n  },\n  AVERAGE: {\n    min: 50,\n    max: 69,\n    label: 'Average',\n    color: 'yellow'\n  },\n  NEEDS_IMPROVEMENT: {\n    min: 0,\n    max: 49,\n    label: 'Needs Improvement',\n    color: 'red'\n  }\n};\n\n// Assessment Question Interface\nexport const createQuestion = ({\n  id,\n  text,\n  type = ASSESSMENT_TYPES.LIKERT,\n  options = [],\n  points = 1,\n  timeLimit = 0,\n  correctAnswer,\n  branchLogic\n}) => ({\n  id,\n  text,\n  type,\n  options,\n  points,\n  timeLimit,\n  correctAnswer,\n  branchLogic\n});\n\n// Assessment Interface\nexport const createAssessment = ({\n  id,\n  title,\n  description,\n  type = ASSESSMENT_TYPES.LIKERT,\n  questions = [],\n  timerType = TIMER_TYPES.NONE,\n  totalTime = 0,\n  passingScore = 70,\n  isFree = true,\n  couponCode = null,\n  price = 0\n}) => ({\n  id,\n  title,\n  description,\n  type,\n  questions,\n  timerType,\n  totalTime,\n  passingScore,\n  isFree,\n  couponCode,\n  price,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n});","map":{"version":3,"names":["ASSESSMENT_TYPES","LIKERT","POINT_BASED","TIMER_TYPES","PER_QUESTION","FULL_TEST","NONE","SCORE_RANGES","EXCELLENT","min","max","label","color","GOOD","AVERAGE","NEEDS_IMPROVEMENT","createQuestion","id","text","type","options","points","timeLimit","correctAnswer","branchLogic","createAssessment","title","description","questions","timerType","totalTime","passingScore","isFree","couponCode","price","createdAt","Date","toISOString","updatedAt"],"sources":["E:/my-lms-frontend (2)/my-lms-frontend/src/assessment/utils/types.js"],"sourcesContent":["// Assessment Types\r\nexport const ASSESSMENT_TYPES = {\r\n  LIKERT: 'likert',\r\n  POINT_BASED: 'point_based'\r\n};\r\n\r\n// Timer Types\r\nexport const TIMER_TYPES = {\r\n  PER_QUESTION: 'per_question',\r\n  FULL_TEST: 'full_test',\r\n  NONE: 'none'\r\n};\r\n\r\n// Score Range Interface\r\nexport const SCORE_RANGES = {\r\n  EXCELLENT: { min: 90, max: 100, label: 'Excellent', color: 'green' },\r\n  GOOD: { min: 70, max: 89, label: 'Good', color: 'blue' },\r\n  AVERAGE: { min: 50, max: 69, label: 'Average', color: 'yellow' },\r\n  NEEDS_IMPROVEMENT: { min: 0, max: 49, label: 'Needs Improvement', color: 'red' }\r\n};\r\n\r\n// Assessment Question Interface\r\nexport const createQuestion = ({\r\n  id,\r\n  text,\r\n  type = ASSESSMENT_TYPES.LIKERT,\r\n  options = [],\r\n  points = 1,\r\n  timeLimit = 0,\r\n  correctAnswer,\r\n  branchLogic\r\n}) => ({\r\n  id,\r\n  text,\r\n  type,\r\n  options,\r\n  points,\r\n  timeLimit,\r\n  correctAnswer,\r\n  branchLogic\r\n});\r\n\r\n// Assessment Interface\r\nexport const createAssessment = ({\r\n  id,\r\n  title,\r\n  description,\r\n  type = ASSESSMENT_TYPES.LIKERT,\r\n  questions = [],\r\n  timerType = TIMER_TYPES.NONE,\r\n  totalTime = 0,\r\n  passingScore = 70,\r\n  isFree = true,\r\n  couponCode = null,\r\n  price = 0\r\n}) => ({\r\n  id,\r\n  title,\r\n  description,\r\n  type,\r\n  questions,\r\n  timerType,\r\n  totalTime,\r\n  passingScore,\r\n  isFree,\r\n  couponCode,\r\n  price,\r\n  createdAt: new Date().toISOString(),\r\n  updatedAt: new Date().toISOString()\r\n}); "],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAG;EAC9BC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,YAAY,EAAE,cAAc;EAC5BC,SAAS,EAAE,WAAW;EACtBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,SAAS,EAAE;IAAEC,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE,GAAG;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAQ,CAAC;EACpEC,IAAI,EAAE;IAAEJ,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC;EACxDE,OAAO,EAAE;IAAEL,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAS,CAAC;EAChEG,iBAAiB,EAAE;IAAEN,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAM;AACjF,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAC7BC,EAAE;EACFC,IAAI;EACJC,IAAI,GAAGnB,gBAAgB,CAACC,MAAM;EAC9BmB,OAAO,GAAG,EAAE;EACZC,MAAM,GAAG,CAAC;EACVC,SAAS,GAAG,CAAC;EACbC,aAAa;EACbC;AACF,CAAC,MAAM;EACLP,EAAE;EACFC,IAAI;EACJC,IAAI;EACJC,OAAO;EACPC,MAAM;EACNC,SAAS;EACTC,aAAa;EACbC;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAC;EAC/BR,EAAE;EACFS,KAAK;EACLC,WAAW;EACXR,IAAI,GAAGnB,gBAAgB,CAACC,MAAM;EAC9B2B,SAAS,GAAG,EAAE;EACdC,SAAS,GAAG1B,WAAW,CAACG,IAAI;EAC5BwB,SAAS,GAAG,CAAC;EACbC,YAAY,GAAG,EAAE;EACjBC,MAAM,GAAG,IAAI;EACbC,UAAU,GAAG,IAAI;EACjBC,KAAK,GAAG;AACV,CAAC,MAAM;EACLjB,EAAE;EACFS,KAAK;EACLC,WAAW;EACXR,IAAI;EACJS,SAAS;EACTC,SAAS;EACTC,SAAS;EACTC,YAAY;EACZC,MAAM;EACNC,UAAU;EACVC,KAAK;EACLC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}