{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inspi\\\\OneDrive\\\\Desktop\\\\lms\\\\my-lms-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Mock login - in real app, this would be an API call\n      if (email && password) {\n        const mockUser = {\n          id: 1,\n          email,\n          name: 'John Doe',\n          role: 'student'\n        };\n        localStorage.setItem('user', JSON.stringify(mockUser));\n        setUser(mockUser);\n        toast.success('Login successful!');\n        navigate('/dashboard');\n        return true;\n      }\n      throw new Error('Invalid credentials');\n    } catch (error) {\n      toast.error(error.message || 'Login failed');\n      return false;\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Mock signup - in real app, this would be an API call\n      const mockUser = {\n        id: 1,\n        ...userData,\n        role: 'student'\n      };\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      setUser(mockUser);\n      toast.success('Account created successfully!');\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      toast.error(error.message || 'Signup failed');\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    toast.success('Logged out successfully');\n    navigate('/login');\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","storedUser","localStorage","getItem","JSON","parse","login","email","password","mockUser","id","name","role","setItem","stringify","success","Error","error","message","signup","userData","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/inspi/OneDrive/Desktop/lms/my-lms-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on mount\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Mock login - in real app, this would be an API call\r\n      if (email && password) {\r\n        const mockUser = {\r\n          id: 1,\r\n          email,\r\n          name: 'John Doe',\r\n          role: 'student'\r\n        };\r\n        localStorage.setItem('user', JSON.stringify(mockUser));\r\n        setUser(mockUser);\r\n        toast.success('Login successful!');\r\n        navigate('/dashboard');\r\n        return true;\r\n      }\r\n      throw new Error('Invalid credentials');\r\n    } catch (error) {\r\n      toast.error(error.message || 'Login failed');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      // Mock signup - in real app, this would be an API call\r\n      const mockUser = {\r\n        id: 1,\r\n        ...userData,\r\n        role: 'student'\r\n      };\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n      setUser(mockUser);\r\n      toast.success('Account created successfully!');\r\n      navigate('/dashboard');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.message || 'Signup failed');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n    navigate('/login');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}