{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-lms-frontend (2)\\\\my-lms-frontend\\\\src\\\\assessment\\\\pages\\\\SelfAssessmentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport AssessmentDashboard from '../components/AssessmentDashboard';\nimport AssessmentQuestion from '../components/AssessmentQuestion';\nimport AssessmentResult from '../components/AssessmentResult';\nimport Timer from '../components/Timer';\nimport AdminAssessmentManager from '../components/AdminAssessmentManager';\nimport { ASSESSMENT_TYPES, TIMER_TYPES, createAssessment, createQuestion } from '../utils/types';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelfAssessmentPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [view, setView] = useState('dashboard');\n  const [assessments, setAssessments] = useState(() => {\n    const savedAssessments = localStorage.getItem('assessments');\n    return savedAssessments ? JSON.parse(savedAssessments) : [];\n  });\n  const [currentAssessment, setCurrentAssessment] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [startTime, setStartTime] = useState(null);\n  const [couponInput, setCouponInput] = useState('');\n  const [currentSelectedAssessment, setCurrentSelectedAssessment] = useState(null);\n  const [assessmentHistory, setAssessmentHistory] = useState(() => {\n    const savedHistory = localStorage.getItem('assessmentHistory');\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n\n  // Save assessments to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('assessments', JSON.stringify(assessments));\n  }, [assessments]);\n\n  // Save assessment history to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('assessmentHistory', JSON.stringify(assessmentHistory));\n  }, [assessmentHistory]);\n  const handleStartAssessment = assessment => {\n    if (!assessment.isFree) {\n      setCurrentSelectedAssessment(assessment);\n      setView('payment');\n      return;\n    }\n    setCurrentAssessment(assessment);\n    setCurrentQuestion(0);\n    setAnswers({});\n    setStartTime(new Date());\n    setView('assessment');\n  };\n  const handleCouponSubmit = () => {\n    if (couponInput === (currentSelectedAssessment === null || currentSelectedAssessment === void 0 ? void 0 : currentSelectedAssessment.couponCode)) {\n      toast.success('Coupon applied! Starting assessment...');\n      setCurrentAssessment(currentSelectedAssessment);\n      setCurrentQuestion(0);\n      setAnswers({});\n      setStartTime(new Date());\n      setView('assessment');\n      setCouponInput('');\n      setCurrentSelectedAssessment(null);\n    } else {\n      toast.error('Invalid coupon code.');\n    }\n  };\n  const handleSimulatePayment = () => {\n    toast.success('Payment simulated successfully! Starting assessment...');\n    setCurrentAssessment(currentSelectedAssessment);\n    setCurrentQuestion(0);\n    setAnswers({});\n    setStartTime(new Date());\n    setView('assessment');\n    setCouponInput('');\n    setCurrentSelectedAssessment(null);\n  };\n  const handleAnswer = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n  const handleNextQuestion = () => {\n    if (!currentAssessment || !currentAssessment.questions) {\n      handleBackToDashboard();\n      return;\n    }\n    if (currentQuestion < currentAssessment.questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      handleCompleteAssessment();\n    }\n  };\n  const handleCompleteAssessment = () => {\n    if (!currentAssessment || !startTime) {\n      handleBackToDashboard();\n      return;\n    }\n    const endTime = new Date();\n    const timeSpent = (endTime - startTime) / 1000; // in seconds\n\n    const result = {\n      assessmentId: currentAssessment.id,\n      assessmentTitle: currentAssessment.title,\n      score: calculateScore(),\n      timeSpent,\n      completedAt: endTime.toISOString(),\n      answers\n    };\n    setAssessmentHistory(prev => [...prev, result]);\n    setView('result');\n  };\n  const calculateScore = () => {\n    if (!currentAssessment || !currentAssessment.questions) {\n      return 0;\n    }\n    let totalPoints = 0;\n    let earnedPoints = 0;\n    currentAssessment.questions.forEach(question => {\n      if (question.type === ASSESSMENT_TYPES.POINT_BASED) {\n        totalPoints += question.points;\n        if (answers[question.id] === question.correctAnswer) {\n          earnedPoints += question.points;\n        }\n      } else if (question.type === ASSESSMENT_TYPES.LIKERT) {\n        totalPoints += 5; // Max score for Likert\n        earnedPoints += parseInt(answers[question.id]) || 0;\n      }\n    });\n    return totalPoints > 0 ? Math.round(earnedPoints / totalPoints * 100) : 0;\n  };\n  const handleSaveAssessment = assessment => {\n    setAssessments(prev => {\n      const existingIndex = prev.findIndex(a => a.id === assessment.id);\n      if (existingIndex >= 0) {\n        const updated = [...prev];\n        updated[existingIndex] = assessment;\n        return updated;\n      }\n      return [...prev, assessment];\n    });\n    toast.success('Assessment saved successfully!');\n    setView('dashboard'); // Return to dashboard after saving\n  };\n  const handleDeleteAssessment = assessmentId => {\n    setAssessments(prev => prev.filter(a => a.id !== assessmentId));\n    toast.success('Assessment deleted successfully!');\n  };\n  const handleCreateNewAssessment = () => {\n    setView('admin');\n  };\n  const handleBackToDashboard = () => {\n    setView('dashboard');\n    setCurrentAssessment(null);\n    setCurrentQuestion(0);\n    setAnswers({});\n    setCouponInput('');\n    setCurrentSelectedAssessment(null);\n  };\n  const renderView = () => {\n    switch (view) {\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: \"Self Assessments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), (user === null || user === void 0 ? void 0 : user.role) === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateNewAssessment,\n              className: \"btn-primary\",\n              type: \"button\",\n              children: \"Manage Assessments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AssessmentDashboard, {\n            assessments: assessments,\n            history: assessmentHistory,\n            onStartAssessment: handleStartAssessment,\n            onCreateNewAssessment: () => setView('admin'),\n            isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this);\n      case 'assessment':\n        if (!currentAssessment || !currentAssessment.questions || !currentAssessment.questions[currentQuestion]) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBackToDashboard,\n              className: \"text-blue-600 hover:text-blue-500\",\n              children: \"\\u2190 Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: \"Error: Assessment not found or invalid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this);\n        }\n        const currentQuestionData = currentAssessment.questions[currentQuestion];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBackToDashboard,\n              className: \"text-blue-600 hover:text-blue-500\",\n              children: \"\\u2190 Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Question \", currentQuestion + 1, \" of \", currentAssessment.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), currentAssessment.timerType === TIMER_TYPES.FULL_TEST && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white shadow rounded-lg p-4\",\n            children: /*#__PURE__*/_jsxDEV(Timer, {\n              initialTime: currentAssessment.totalTime * 60,\n              onTimeUp: handleCompleteAssessment,\n              isActive: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AssessmentQuestion, {\n            question: currentQuestionData,\n            onAnswer: handleAnswer,\n            answer: answers[currentQuestionData.id],\n            onNext: handleNextQuestion,\n            isLastQuestion: currentQuestion === currentAssessment.questions.length - 1,\n            timerType: currentAssessment.timerType,\n            timeLimit: currentAssessment.totalTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this);\n      case 'result':\n        if (!currentAssessment) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBackToDashboard,\n              className: \"text-blue-600 hover:text-blue-500\",\n              children: \"\\u2190 Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: \"Error: Assessment results not found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBackToDashboard,\n            className: \"text-blue-600 hover:text-blue-500\",\n            children: \"\\u2190 Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AssessmentResult, {\n            assessment: currentAssessment,\n            score: calculateScore(),\n            answers: answers,\n            timeSpent: (new Date() - startTime) / 1000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this);\n      case 'admin':\n        if ((user === null || user === void 0 ? void 0 : user.role) !== 'admin') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500\",\n            children: \"Access Denied. Admin privileges required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: \"Manage Assessments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBackToDashboard,\n              className: \"text-blue-600 hover:text-blue-500\",\n              children: \"\\u2190 Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AdminAssessmentManager, {\n            assessments: assessments,\n            onSave: handleSaveAssessment,\n            onDelete: handleDeleteAssessment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this);\n      case 'payment':\n        if (!currentSelectedAssessment) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBackToDashboard,\n              className: \"text-blue-600 hover:text-blue-500\",\n              children: \"\\u2190 Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: \"Error: No assessment selected for payment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow rounded-lg p-6 space-y-4 max-w-md mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-900 mb-4\",\n            children: [\"Unlock \\\"\", currentSelectedAssessment.title, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: \"This assessment is not free. Please complete payment or enter a valid coupon code to proceed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), currentSelectedAssessment.couponCode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"couponCodeInput\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Enter Coupon Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"couponCodeInput\",\n              value: couponInput,\n              onChange: e => setCouponInput(e.target.value),\n              className: \"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n              placeholder: \"e.g., DISC2024\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCouponSubmit,\n              className: \"btn-primary w-full\",\n              children: \"Apply Coupon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-t pt-4 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 mb-2\",\n              children: \"Or simulate payment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSimulatePayment,\n              className: \"btn-secondary w-full\",\n              children: \"Simulate Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBackToDashboard,\n            className: \"text-blue-600 hover:text-blue-500 w-full mt-4\",\n            children: \"\\u2190 Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: renderView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n};\n_s(SelfAssessmentPage, \"OWrtZw95vqT7bsV+3ze9re1r0gw=\", false, function () {\n  return [useAuth];\n});\n_c = SelfAssessmentPage;\nexport default SelfAssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"SelfAssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","AssessmentDashboard","AssessmentQuestion","AssessmentResult","Timer","AdminAssessmentManager","ASSESSMENT_TYPES","TIMER_TYPES","createAssessment","createQuestion","toast","jsxDEV","_jsxDEV","SelfAssessmentPage","_s","user","view","setView","assessments","setAssessments","savedAssessments","localStorage","getItem","JSON","parse","currentAssessment","setCurrentAssessment","currentQuestion","setCurrentQuestion","answers","setAnswers","startTime","setStartTime","couponInput","setCouponInput","currentSelectedAssessment","setCurrentSelectedAssessment","assessmentHistory","setAssessmentHistory","savedHistory","setItem","stringify","handleStartAssessment","assessment","isFree","Date","handleCouponSubmit","couponCode","success","error","handleSimulatePayment","handleAnswer","questionId","answer","prev","handleNextQuestion","questions","handleBackToDashboard","length","handleCompleteAssessment","endTime","timeSpent","result","assessmentId","id","assessmentTitle","title","score","calculateScore","completedAt","toISOString","totalPoints","earnedPoints","forEach","question","type","POINT_BASED","points","correctAnswer","LIKERT","parseInt","Math","round","handleSaveAssessment","existingIndex","findIndex","a","updated","handleDeleteAssessment","filter","handleCreateNewAssessment","renderView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","history","onStartAssessment","onCreateNewAssessment","isAdmin","currentQuestionData","timerType","FULL_TEST","initialTime","totalTime","onTimeUp","isActive","onAnswer","onNext","isLastQuestion","timeLimit","onSave","onDelete","htmlFor","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["E:/my-lms-frontend (2)/my-lms-frontend/src/assessment/pages/SelfAssessmentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport AssessmentDashboard from '../components/AssessmentDashboard';\r\nimport AssessmentQuestion from '../components/AssessmentQuestion';\r\nimport AssessmentResult from '../components/AssessmentResult';\r\nimport Timer from '../components/Timer';\r\nimport AdminAssessmentManager from '../components/AdminAssessmentManager';\r\nimport { ASSESSMENT_TYPES, TIMER_TYPES, createAssessment, createQuestion } from '../utils/types';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst SelfAssessmentPage = () => {\r\n  const { user } = useAuth();\r\n  const [view, setView] = useState('dashboard');\r\n  const [assessments, setAssessments] = useState(() => {\r\n    const savedAssessments = localStorage.getItem('assessments');\r\n    return savedAssessments ? JSON.parse(savedAssessments) : [];\r\n  });\r\n  const [currentAssessment, setCurrentAssessment] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [couponInput, setCouponInput] = useState('');\r\n  const [currentSelectedAssessment, setCurrentSelectedAssessment] = useState(null);\r\n  const [assessmentHistory, setAssessmentHistory] = useState(() => {\r\n    const savedHistory = localStorage.getItem('assessmentHistory');\r\n    return savedHistory ? JSON.parse(savedHistory) : [];\r\n  });\r\n\r\n  // Save assessments to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('assessments', JSON.stringify(assessments));\r\n  }, [assessments]);\r\n\r\n  // Save assessment history to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('assessmentHistory', JSON.stringify(assessmentHistory));\r\n  }, [assessmentHistory]);\r\n\r\n  const handleStartAssessment = (assessment) => {\r\n    if (!assessment.isFree) {\r\n      setCurrentSelectedAssessment(assessment);\r\n      setView('payment');\r\n      return;\r\n    }\r\n    setCurrentAssessment(assessment);\r\n    setCurrentQuestion(0);\r\n    setAnswers({});\r\n    setStartTime(new Date());\r\n    setView('assessment');\r\n  };\r\n\r\n  const handleCouponSubmit = () => {\r\n    if (couponInput === currentSelectedAssessment?.couponCode) {\r\n      toast.success('Coupon applied! Starting assessment...');\r\n      setCurrentAssessment(currentSelectedAssessment);\r\n      setCurrentQuestion(0);\r\n      setAnswers({});\r\n      setStartTime(new Date());\r\n      setView('assessment');\r\n      setCouponInput('');\r\n      setCurrentSelectedAssessment(null);\r\n    } else {\r\n      toast.error('Invalid coupon code.');\r\n    }\r\n  };\r\n\r\n  const handleSimulatePayment = () => {\r\n    toast.success('Payment simulated successfully! Starting assessment...');\r\n    setCurrentAssessment(currentSelectedAssessment);\r\n    setCurrentQuestion(0);\r\n    setAnswers({});\r\n    setStartTime(new Date());\r\n    setView('assessment');\r\n    setCouponInput('');\r\n    setCurrentSelectedAssessment(null);\r\n  };\r\n\r\n  const handleAnswer = (questionId, answer) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: answer\r\n    }));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (!currentAssessment || !currentAssessment.questions) {\r\n      handleBackToDashboard();\r\n      return;\r\n    }\r\n\r\n    if (currentQuestion < currentAssessment.questions.length - 1) {\r\n      setCurrentQuestion(prev => prev + 1);\r\n    } else {\r\n      handleCompleteAssessment();\r\n    }\r\n  };\r\n\r\n  const handleCompleteAssessment = () => {\r\n    if (!currentAssessment || !startTime) {\r\n      handleBackToDashboard();\r\n      return;\r\n    }\r\n\r\n    const endTime = new Date();\r\n    const timeSpent = (endTime - startTime) / 1000; // in seconds\r\n\r\n    const result = {\r\n      assessmentId: currentAssessment.id,\r\n      assessmentTitle: currentAssessment.title,\r\n      score: calculateScore(),\r\n      timeSpent,\r\n      completedAt: endTime.toISOString(),\r\n      answers\r\n    };\r\n\r\n    setAssessmentHistory(prev => [...prev, result]);\r\n    setView('result');\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    if (!currentAssessment || !currentAssessment.questions) {\r\n      return 0;\r\n    }\r\n\r\n    let totalPoints = 0;\r\n    let earnedPoints = 0;\r\n\r\n    currentAssessment.questions.forEach(question => {\r\n      if (question.type === ASSESSMENT_TYPES.POINT_BASED) {\r\n        totalPoints += question.points;\r\n        if (answers[question.id] === question.correctAnswer) {\r\n          earnedPoints += question.points;\r\n        }\r\n      } else if (question.type === ASSESSMENT_TYPES.LIKERT) {\r\n        totalPoints += 5; // Max score for Likert\r\n        earnedPoints += parseInt(answers[question.id]) || 0;\r\n      }\r\n    });\r\n\r\n    return totalPoints > 0 ? Math.round((earnedPoints / totalPoints) * 100) : 0;\r\n  };\r\n\r\n  const handleSaveAssessment = (assessment) => {\r\n    setAssessments(prev => {\r\n      const existingIndex = prev.findIndex(a => a.id === assessment.id);\r\n      if (existingIndex >= 0) {\r\n        const updated = [...prev];\r\n        updated[existingIndex] = assessment;\r\n        return updated;\r\n      }\r\n      return [...prev, assessment];\r\n    });\r\n    toast.success('Assessment saved successfully!');\r\n    setView('dashboard'); // Return to dashboard after saving\r\n  };\r\n\r\n  const handleDeleteAssessment = (assessmentId) => {\r\n    setAssessments(prev => prev.filter(a => a.id !== assessmentId));\r\n    toast.success('Assessment deleted successfully!');\r\n  };\r\n\r\n  const handleCreateNewAssessment = () => {\r\n    setView('admin');\r\n  };\r\n\r\n  const handleBackToDashboard = () => {\r\n    setView('dashboard');\r\n    setCurrentAssessment(null);\r\n    setCurrentQuestion(0);\r\n    setAnswers({});\r\n    setCouponInput('');\r\n    setCurrentSelectedAssessment(null);\r\n  };\r\n\r\n  const renderView = () => {\r\n    switch (view) {\r\n      case 'dashboard':\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">Self Assessments</h1>\r\n              {user?.role === 'admin' && (\r\n                <button\r\n                  onClick={handleCreateNewAssessment}\r\n                  className=\"btn-primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Manage Assessments\r\n                </button>\r\n              )}\r\n            </div>\r\n            <AssessmentDashboard\r\n              assessments={assessments}\r\n              history={assessmentHistory}\r\n              onStartAssessment={handleStartAssessment}\r\n              onCreateNewAssessment={() => setView('admin')}\r\n              isAdmin={user?.role === 'admin'}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case 'assessment':\r\n        if (!currentAssessment || !currentAssessment.questions || !currentAssessment.questions[currentQuestion]) {\r\n          return (\r\n            <div className=\"space-y-6\">\r\n              <button\r\n                onClick={handleBackToDashboard}\r\n                className=\"text-blue-600 hover:text-blue-500\"\r\n              >\r\n                ← Back to Dashboard\r\n              </button>\r\n              <div className=\"text-red-500\">Error: Assessment not found or invalid.</div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const currentQuestionData = currentAssessment.questions[currentQuestion];\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <button\r\n                onClick={handleBackToDashboard}\r\n                className=\"text-blue-600 hover:text-blue-500\"\r\n              >\r\n                ← Back to Dashboard\r\n              </button>\r\n              <div className=\"text-sm text-gray-600\">\r\n                Question {currentQuestion + 1} of {currentAssessment.questions.length}\r\n              </div>\r\n            </div>\r\n\r\n            {currentAssessment.timerType === TIMER_TYPES.FULL_TEST && (\r\n              <div className=\"bg-white shadow rounded-lg p-4\">\r\n                <Timer\r\n                  initialTime={currentAssessment.totalTime * 60}\r\n                  onTimeUp={handleCompleteAssessment}\r\n                  isActive={true}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <AssessmentQuestion\r\n              question={currentQuestionData}\r\n              onAnswer={handleAnswer}\r\n              answer={answers[currentQuestionData.id]}\r\n              onNext={handleNextQuestion}\r\n              isLastQuestion={currentQuestion === currentAssessment.questions.length - 1}\r\n              timerType={currentAssessment.timerType}\r\n              timeLimit={currentAssessment.totalTime}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case 'result':\r\n        if (!currentAssessment) {\r\n          return (\r\n            <div className=\"space-y-6\">\r\n              <button\r\n                onClick={handleBackToDashboard}\r\n                className=\"text-blue-600 hover:text-blue-500\"\r\n              >\r\n                ← Back to Dashboard\r\n              </button>\r\n              <div className=\"text-red-500\">Error: Assessment results not found.</div>\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <button\r\n              onClick={handleBackToDashboard}\r\n              className=\"text-blue-600 hover:text-blue-500\"\r\n            >\r\n              ← Back to Dashboard\r\n            </button>\r\n            <AssessmentResult\r\n              assessment={currentAssessment}\r\n              score={calculateScore()}\r\n              answers={answers}\r\n              timeSpent={(new Date() - startTime) / 1000}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case 'admin':\r\n        if (user?.role !== 'admin') {\r\n          return (\r\n            <div className=\"text-red-500\">\r\n              Access Denied. Admin privileges required.\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h2 className=\"text-2xl font-bold text-gray-900\">Manage Assessments</h2>\r\n              <button\r\n                onClick={handleBackToDashboard}\r\n                className=\"text-blue-600 hover:text-blue-500\"\r\n              >\r\n                ← Back to Dashboard\r\n              </button>\r\n            </div>\r\n            <AdminAssessmentManager\r\n              assessments={assessments}\r\n              onSave={handleSaveAssessment}\r\n              onDelete={handleDeleteAssessment}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case 'payment':\r\n        if (!currentSelectedAssessment) {\r\n          return (\r\n            <div className=\"space-y-6\">\r\n              <button\r\n                onClick={handleBackToDashboard}\r\n                className=\"text-blue-600 hover:text-blue-500\"\r\n              >\r\n                ← Back to Dashboard\r\n              </button>\r\n              <div className=\"text-red-500\">Error: No assessment selected for payment.</div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div className=\"bg-white shadow rounded-lg p-6 space-y-4 max-w-md mx-auto\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Unlock \"{currentSelectedAssessment.title}\"</h2>\r\n            <p className=\"text-gray-700\">This assessment is not free. Please complete payment or enter a valid coupon code to proceed.</p>\r\n\r\n            {currentSelectedAssessment.couponCode && (\r\n              <div className=\"space-y-2\">\r\n                <label htmlFor=\"couponCodeInput\" className=\"block text-sm font-medium text-gray-700\">Enter Coupon Code</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"couponCodeInput\"\r\n                  value={couponInput}\r\n                  onChange={(e) => setCouponInput(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                  placeholder=\"e.g., DISC2024\"\r\n                />\r\n                <button\r\n                  onClick={handleCouponSubmit}\r\n                  className=\"btn-primary w-full\"\r\n                >\r\n                  Apply Coupon\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"border-t pt-4 mt-4\">\r\n              <p className=\"text-gray-700 mb-2\">Or simulate payment:</p>\r\n              <button\r\n                onClick={handleSimulatePayment}\r\n                className=\"btn-secondary w-full\"\r\n              >\r\n                Simulate Payment\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              onClick={handleBackToDashboard}\r\n              className=\"text-blue-600 hover:text-blue-500 w-full mt-4\"\r\n            >\r\n              ← Back to Dashboard\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      {renderView()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelfAssessmentPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}